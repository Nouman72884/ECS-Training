---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Task definition for ECS Cluster


Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    AllowedValues:
      - dev
      - test
      - prod

  ApplicationName:
      Description: Please enter the IP range     # optional
      Type: String     # required

  PrivateSubnet1:
      Description: Please enter the IP range     # optional
      Type: String     # required

  PrivateSubnet2:
      Description: Please enter the IP range     # optional
      Type: String     # required

  TargetGroup:
      Description: Name of target group     # optional
      Type: String     # required

  EcsSecurityGroup:
      Description: Name of  Security group     # optional
      Type: String     # required

  ECSCluster:
      Description: Name of ECS cluster    # optional
      Type: String     # required

  TaskMemory:
    Description: enter memory for task     # optional
    Type: Number     # required

  TaskCpu:
    Description: enter cpu units for task     # optional
    Type: Number     # required

  # WebServerContainerMemory:
  #   Description: Please enter the IP range     # optional
  #   Type: Number     # required
  #
  # DBServerContainerMemory:
  #   Description: Please enter the IP range     # optional
  #   Type: Number     # required
  #
  # WebServerContainerCpu:
  #   Description: Please enter the IP range     # optional
  #   Type: Number     # required
  #
  # DBServerContainerCpu:
  #   Description: Please enter the IP range     # optional
  #   Type: Number     # required

  ContainerNameWebServer:
    Type: String
    Description: The name for web server container

  ContainerNameDBServer:
    Type: String
    Description: The name for db server container

  ImageUrlWebServer:
    Type: String
    Description: The url of a docker image that contains the application

  ImageUrlDBServer:
    Type: String
    Description: The url of a docker image that contains the application

  ContainerPortWebServer:
    Type: Number
    Description: The port for web server container

  ContainerPortDBServer:
    Type: Number
    Description: The port for db server container

  ApplicationDbHostNameVariable:
    Type: String
    Description: Environment variable Name for Database Host

  ApplicationDbHostNameValue:
    Type: String
    Description: Environment variable value for Database Host

  ApplicationDbUserVariable:
    Type: String
    Description: Environment variable Name for Database User

  ApplicationDbUserValue:
    Type: String
    Description: Environment variable value for Database User

  ApplicationDbPasswordVariable:
    Type: String
    Description: Environment variable Name for Password

  ApplicationDbPasswordValue:
    Type: String
    Description: Environment variable value for Password

  ApplicationDbNameVariable:
    Type: String
    Description: Environment variable Name for Database Name

  ApplicationDbNameValue:
    Type: String
    Description: Environment variable value for Database Name

  DBRootPasswordVariable:
    Type: String
    Description: Environment variable Name for Database Root Password

  DBRootPasswordValue:
    Type: String
    Description: Environment variable value for Database Root Password

  DBDatabaseNameVariable:
    Type: String
    Description: Environment variable Name for Database Name

  DBDatabaseNameValue:
    Type: String
    Description: Environment variable value for Database Name


  DBUserNameVariable:
    Type: String
    Description: Environment variable Name for Database User Name

  DBUserNameValue:
    Type: String
    Description: Environment variable value for Database User Name

  DBPasswordVariable:
    Type: String
    Description: Environment variable Name for Database Password

  DBPasswordValue:
    Type: String
    Description: Environment variable value for Database Password





Resources:
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${EnvironmentName}-ECSRole
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - ecs.amazonaws.com
              - ec2.amazonaws.com
              - ecs-tasks.amazonaws.com
              - application-autoscaling.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::020046395185:policy/ECSFullAccessPolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
      Path: /


  taskdefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      RequiresCompatibilities:
        - FARGATE
      Family: !Sub ${EnvironmentName}-${ApplicationName}-Task
      Cpu: !Ref TaskCpu
      Memory: !Ref TaskMemory
      NetworkMode: awsvpc     # optional
      TaskRoleArn: !Ref ECSRole
      ExecutionRoleArn: !Ref ECSRole
      ContainerDefinitions:
        - Name: !Ref ContainerNameWebServer
          DependsOn:
            -  Condition: START
               ContainerName: !Ref ContainerNameDBServer
          # Links:
          #   - db
          #Cpu: !Ref WebServerContainerCpu
          Essential: 'true'
          Image: !Ref ImageUrlWebServer
          #Memory: !Ref WebServerContainerMemory
          PortMappings:
            -
              ContainerPort: !Ref ContainerPortWebServer
              #HostPort: 80
              Protocol: tcp
          Environment:
            - Name: !Ref ApplicationDbHostNameVariable
              Value: !Ref ApplicationDbHostNameValue
            - Name: !Ref ApplicationDbUserVariable
              Value: !Ref ApplicationDbUserValue
            - Name: !Ref ApplicationDbPasswordVariable
              Value: !Ref ApplicationDbPasswordValue
            - Name: !Ref ApplicationDbNameVariable
              Value: !Ref ApplicationDbNameValue

        - Name: !Ref ContainerNameDBServer
          #Cpu: !Ref DBServerContainerCpu
          Image: !Ref ImageUrlDBServer
          #Memory: !Ref DBServerContainerMemory
          PortMappings:
            -
              ContainerPort: !Ref ContainerPortDBServer
              #HostPort: 3306
              Protocol: tcp
          Environment:
            - Name: !Ref DBRootPasswordVariable
              Value: !Ref DBRootPasswordValue
            - Name: !Ref DBDatabaseNameVariable
              Value: !Ref DBDatabaseNameValue
            - Name: !Ref DBUserNameVariable
              Value: !Ref DBUserNameValue
            - Name: !Ref DBPasswordVariable
              Value: !Ref DBPasswordValue

  service:
    Type: AWS::ECS::Service
    DependsOn: taskdefinition
    Properties:
      ServiceName: !Sub ${EnvironmentName}-${ApplicationName}-service
      Cluster: !Ref 'ECSCluster'
      LaunchType: FARGATE
      # DeploymentConfiguration:
      #   MaximumPercent: 200
      #   MinimumHealthyPercent: 100
      DesiredCount: 2
      HealthCheckGracePeriodSeconds: 120
      TaskDefinition: !Ref 'taskdefinition'
      NetworkConfiguration:
        AwsvpcConfiguration:
          # change to DISABLED if you're using private subnets that have access to a NAT gateway
          AssignPublicIp: DISABLED
          Subnets:
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
          SecurityGroups:
            - !Ref EcsSecurityGroup
      LoadBalancers:
        - ContainerName: !Ref ContainerNameWebServer
          ContainerPort: !Ref ContainerPortWebServer
          TargetGroupArn: !Ref 'TargetGroup'
