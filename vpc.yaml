---
AWSTemplateFormatVersion: "2010-09-09"

Description: >
  VPC sample template

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    AllowedValues:
      - dev
      - test
      - prod

  VpcCIDR:
    Description: Please enter the IP range     # optional
    Type: String     # required

  PublicSubnet1CIDR:
    Description: Please enter IP range     # optional
    Type: String     # required

  PublicSubnet2CIDR:
    Description: Please enter IP range     # optional
    Type: String     # required

  PrivateSubnet1CIDR:
    Description: Please enter IP range     # optional
    Type: String     # required

  PrivateSubnet2CIDR:
    Description: Please enter IP range     # optional
    Type: String     # required

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR     # required
      InstanceTenancy: default      # optional

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC     # required
      AvailabilityZone:  !Select [ 0, !GetAZs '' ]     # optional
      CidrBlock: !Ref PublicSubnet1CIDR     # required
      MapPublicIpOnLaunch: true     # optional
      Tags:                # optional, list of Tag
        - Key: Name     # optional
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)     # optional


  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC     # required
      AvailabilityZone: !Select [ 1, !GetAZs '' ]     # optional
      CidrBlock: !Ref PublicSubnet2CIDR     # required
      MapPublicIpOnLaunch: true     # optional
      Tags:                # optional, list of Tag
        - Key: Name     # optional
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)     # optional



  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC     # required
      AvailabilityZone: !Select [ 0, !GetAZs '' ]     # optional
      CidrBlock: !Ref PrivateSubnet1CIDR    # required
      Tags:                # optional, list of Tag
        - Key: Name     # optional
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)     # optional


  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC     # required
      AvailabilityZone: !Select [ 1, !GetAZs '' ]     # optional
      CidrBlock: !Ref PrivateSubnet2CIDR    # required
      Tags:                # optional, list of Tag
        - Key: Name     # optional
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)     # optional

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:                # optional, list of Tag
        - Key: Name     # optional
          Value: !Sub ${EnvironmentName}-InternetGateway    # optional

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway    # optional
      VpcId: !Ref VPC     # required

  NatGW:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGWEIP.AllocationId     # required
      SubnetId: !Ref PublicSubnet1     # required


  NatGWEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:                # optional, list of Tag
        - Key: Name     # optional
          Value: !Sub ${EnvironmentName}-PublicRoutes     # optional
      VpcId: !Ref VPC      # required



  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PrivateRoutes

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGW

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet2

  EcsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId: !Ref VPC
      SecurityGroupIngress:
       - IpProtocol: -1
         FromPort: 0
         ToPort: 65535
         SourceSecurityGroupId: !GetAtt ALBSG.GroupId
       - IpProtocol: -1
         FromPort: 0
         ToPort: 65535
         CidrIp: 10.1.0.0/16
      SecurityGroupEgress:
       - IpProtocol: -1
         FromPort: 0
         ToPort: 65535
         CidrIp: 0.0.0.0/0

  ALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow All Traffic to Application Load Balancer
      VpcId: !Ref VPC
      SecurityGroupIngress:
       - IpProtocol: -1
         FromPort: 0
         ToPort: 65535
         CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
       - IpProtocol: -1
         FromPort: 0
         ToPort: 65535
         CidrIp: 0.0.0.0/0

Outputs:
  PublicSubnet1r:
    Value: !Ref "PublicSubnet1"

  PublicSubnet2r:
    Value: !Ref "PublicSubnet2"

  PrivateSubnet1r:
    Value: !Ref "PrivateSubnet1"

  PrivateSubnet2r:
    Value: !Ref "PrivateSubnet2"

  VpcID:
    Value: !Ref "VPC"

  EcsSecurityGroup:
    Value: !Ref "ALBSG"

  ALBSecurityGroup:
    Value: !Ref "ALBSG"
